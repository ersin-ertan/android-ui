package com.nullcognition.widgetswithcontentproviders.contentProvider;
// ersin 12/11/15 Copyright (c) 2015+ All rights reserved.


import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

//@StorIOSQLiteType(table = TweetsTable.TABLE)
public class Tweet {

	/**
	 * If object was not inserted into db, id will be null
	 */
//	@Nullable
//	@StorIOSQLiteColumn(name = TweetsTable.COLUMN_ID, key = true)
	Long id;

	@NonNull
//	@StorIOSQLiteColumn(name = TweetsTable.COLUMN_CONTENT)
	String content;

	// leave default constructor for AutoGenerated code!
	Tweet() {
	}

	private Tweet(@Nullable Long id, @NonNull String content) {
		this.id = id;
		this.content = content;
	}

	@NonNull
	public static Tweet newTweet(@Nullable Long id, @NonNull String content) {
		return new Tweet(id, content);
	}

	@NonNull
	public static Tweet newTweet(@NonNull String content) {
		return new Tweet(null, content);
	}

	@Nullable
	public Long id() {
		return id;
	}

	@NonNull
	public String content() {
		return content;
	}

	// BTW, you can use AutoValue/AutoParcel to get immutability and code generation for free
	// Check our tests, we have examples!
	@Override
	public boolean equals(Object o) {
		if (this == o) return true;
		if (o == null || getClass() != o.getClass()) return false;

		Tweet tweet = (Tweet) o;

		if (id != null ? !id.equals(tweet.id) : tweet.id != null) return false;
		return content.equals(tweet.content);
	}

	@Override
	public int hashCode() {
		int result = id != null ? id.hashCode() : 0;
		result = 31 * result + content.hashCode();
		return result;
	}

	@Override
	public String toString() {
		return "Tweet{" +
				"id=" + id +
				", content='" + content + '\'' +
				'}';
	}
}
